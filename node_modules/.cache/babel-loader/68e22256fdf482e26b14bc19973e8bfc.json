{"ast":null,"code":"var _jsxFileName = \"/Users/stuartjohnstone/Documents/GitHub/ReactChess/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet img = new Image();\nimg.src = 'https://img.favpng.com/11/12/22/chess-piece-pin-knight-clip-art-png-favpng-saLesWdcsg2rCsJeeEeyGJqcQ.jpg'; //function to display the light square\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"squarel\",\n    onClick: props.onClick,\n    children: [props.index, props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 2\n  }, this);\n} //function to display the dark square\n\n\n_c = Square;\n\nfunction Squared(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"squared\",\n    background: \"#fff\",\n    onClick: props.onClick,\n    children: [props.index, props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 2\n  }, this);\n} // checks to see if compareValue is a different color to pieceColor\n\n\n_c2 = Squared;\n\nfunction isOppositeColor(compareValue, pieceColor) {\n  if (compareValue === 0) {\n    return false;\n  }\n\n  if (compareValue > 10 && pieceColor === true) {\n    return true;\n  } else if (compareValue < 10 && pieceColor === false) {\n    return true;\n  } else {\n    return false;\n  }\n}\n/*\n\tCheckLine(int, int, int, int, bool, int[][])\n\tRecursively collects a list of possible moves in a line directed by xChange and yChange\n\treturns a set of possible moves in a streight line\n*/\n\n\nfunction CheckLine(x, y, xChange, yChange, color, squares) {\n  x += xChange;\n  y += yChange;\n  var cord = x + y * 8;\n\n  if (x >= 0 && x <= 7) {\n    if (y >= 0 && y <= 7) {\n      if (!isOppositeColor(squares[cord], !color)) {\n        return [cord].concat(CheckLine(x, y, xChange, yChange, color, squares));\n      }\n    }\n  }\n\n  return null;\n}\n\n_c3 = CheckLine;\n\nfunction checkForCheck(squares) {\n  var moveArray;\n  var color;\n\n  for (var i in squares) {\n    if (squares[i] >= 1 && squares[i] !== 6 && squares[i] !== 16) {\n      //calculates the color of i\n      if (squares[i] >= 10) {\n        color = false;\n      } else {\n        color = true;\n      } //gets the possible moves for i\n\n\n      moveArray = CalculateMoves(i, squares[i], squares);\n\n      for (var m in moveArray) {\n        //checks to see if a king is in the list\n        if ((squares[m] === 6 || squares[m] === 16) && isOppositeColor(squares[m], color)) {\n          console.log(m, \"check\");\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction CalculatePawnMoves(x, y, color, i, value, squares) {\n  var moveArray = [];\n  var direction = -1; // assumes the color is white\n\n  if (value >= 10) {\n    // the piece color is black invert it\n    direction = 1;\n  } //allows the pawn to take to the left if it can capture\n\n\n  if (x > 0 && isOppositeColor(squares[x - 1 + (y + direction) * 8], color)) {\n    moveArray.push(x - 1 + (y + direction) * 8);\n  } //allows the pawn to take to the right if there is a capture\n\n\n  if (x < 7 && isOppositeColor(squares[x + 1 + (y + direction) * 8], color)) {\n    moveArray.push(x + 1 + (y + direction) * 8);\n  } //allows the pawn to move one square forward\n\n\n  if (squares[x + (y + direction) * 8] === 0) {\n    moveArray.push(x + (y + direction) * 8); //if the pawn can move forward once check to see if it can move twice\n    //if the white pawn hasn't moved yet it can move two squares\n\n    if (value === 1 && y === 6 && squares[x + (y - 1 + direction) * 8] === 0) {\n      moveArray.push(x + (y - 1 + direction) * 8); //if the blackwhite pawn hasn't moved yet it can move two squares\n    } else if (value === 11 && y === 1 && squares[x + (y + 1 + direction) * 8] === 0) {\n      moveArray.push(x + (y + 1 + direction) * 8);\n    }\n  }\n\n  return moveArray;\n}\n\n_c4 = CalculatePawnMoves;\n\nfunction CalculateKnightMoves(x, y, color, squares) {\n  var pX;\n  var pY;\n  var moveArray = []; //temp variables\n\n  var pHigh;\n  var pLow; //possible combinations that will allow the special knight movement\n\n  var PossibleX = [-2, -1, 1, 2];\n  var PossibleY = [1, 2, 2, 1];\n\n  for (var index in PossibleX) {\n    pX = PossibleX[index];\n    pY = PossibleY[index];\n    pHigh = x + pX + (y + pY) * 8;\n    pLow = x + pX + (y - pY) * 8; //checks to see if the x cordinate is in bounds\n\n    if (x + pX <= 7 && x + pX >= 0) {\n      //checks to see if the knight could move to a square above\n      if (y + pY <= 7 && !isOppositeColor(squares[pHigh], !color)) {\n        moveArray.push(pHigh);\n      } //checks to see if the knight could move to a square below\n\n\n      if (y - pY >= 0 && !isOppositeColor(squares[pLow], !color)) {\n        moveArray.push(pLow);\n      }\n    }\n  }\n\n  return moveArray;\n}\n\n_c5 = CalculateKnightMoves;\n\nfunction CalculateBishopMoves(x, y, color, squares) {\n  var moveArray = [];\n  moveArray = moveArray.concat(CheckLine(x, y, 1, 1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, 1, -1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, -1, 1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, -1, -1, color, squares));\n  return moveArray;\n}\n\n_c6 = CalculateBishopMoves;\n\nfunction CalculateRookMoves(x, y, color, squares) {\n  var moveArray = []; // vertical/horizontal movement\n\n  moveArray = moveArray.concat(CheckLine(x, y, 1, 0, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, -1, 0, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, 0, 1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, 0, -1, color, squares));\n  return moveArray;\n}\n\n_c7 = CalculateRookMoves;\n\nfunction CalculateQueenMoves(x, y, color, squares) {\n  var moveArray = []; // diagonal movement\n\n  moveArray = moveArray.concat(CheckLine(x, y, 1, 1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, 1, -1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, -1, 1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, -1, -1, color, squares)); // vertical/horizontal movement\n\n  moveArray = moveArray.concat(CheckLine(x, y, 1, 0, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, -1, 0, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, 0, 1, color, squares));\n  moveArray = moveArray.concat(CheckLine(x, y, 0, -1, color, squares));\n  return moveArray;\n}\n\n_c8 = CalculateQueenMoves;\n\nfunction CalculateKingMoves(x, y, color, i, value, squares) {\n  var pX;\n  var pY;\n  var moveArray = [];\n  var allOpponentMoves = CalculateAllMovesForOppositeColor(squares, color);\n  var combinedX;\n  var combinedY;\n  var tempI;\n  var validMove;\n\n  for (var tempX in [-1, 0, 1]) {\n    for (var tempY in [-1, 0, 1]) {\n      pX = [-1, 0, 1][tempX];\n      pY = [-1, 0, 1][tempY];\n      tempI = combinedX + combinedY * 8; //checks to see if the potential posistion is within the bounds of the board\n\n      if (combinedX <= 7 && combinedX >= 0 && combinedY <= 7 && combinedY >= 0) {\n        //checks to see if the potential position is not where the king is already \n        if (pX !== 0 || pY !== 0) {\n          validMove = true;\n\n          for (var m in allOpponentMoves) {\n            if (allOpponentMoves[m] === tempI) {\n              validMove = false;\n            }\n          }\n\n          if (validMove === true) {\n            moveArray.push(tempI);\n          }\n        }\n      }\n    }\n  }\n\n  return moveArray;\n}\n/*\n\tCalculateMoves(int, int, int[][])\n\ti is the location on the squares grid\n\tvalue is the value of i\n\tsquares is the board \n*/\n\n\n_c9 = CalculateKingMoves;\n\nfunction CalculateMoves(i, value, squares) {\n  //calculate board position of the piece\n  var x = i % 8;\n  var y = (i - x) / 8;\n  var moveArray = []; //white = true && white < 10\n  //black = false && black > 10\n\n  var color = true; // initially assumes that the piece is white\n\n  if (value >= 10) {\n    // the piece color is white\n    color = false;\n  } //pawn = 1\n  //knight = 2\n  //bishop = 3\n  //rook = 4\n  //queen = 5\n  //king = 6\n\n\n  if (value === 1 || value === 11) {\n    // pawn\n    moveArray = CalculatePawnMoves(x, y, color, i, value, squares);\n  } else if (value === 2 || value === 12) {\n    // knight\n    moveArray = CalculateKnightMoves(x, y, color, i, value, squares);\n  } else if (value === 3 || value === 13) {\n    // bishop\n    moveArray = CalculateBishopMoves(x, y, color, squares);\n  } else if (value === 4 || value === 14) {\n    // rook\n    moveArray = CalculateRookMoves(x, y, color, squares);\n  } else if (value === 5 || value === 15) {\n    // queen\n    moveArray = CalculateQueenMoves(x, y, color, squares);\n  } else if (value === 6 || value === 16) {\n    moveArray = CalculateKingMoves(x, y, color, i, value, squares);\n  }\n\n  console.log(moveArray);\n  return moveArray;\n}\n\n_c10 = CalculateMoves;\n\nfunction CalculateAllMovesForOppositeColor(squares, color) {\n  var moveArray = [];\n\n  for (var i in squares) {\n    if (color) {\n      if (squares[i] >= 10) {\n        moveArray.concat(CalculateMoves(i, squares[i], squares));\n      }\n    } else {\n      if (squares[i] < 10 && squares[i] !== 0) {\n        moveArray.concat(CalculateMoves(i, squares[i], squares));\n      }\n    }\n  }\n\n  return moveArray;\n} //The main board class\n\n\n_c11 = CalculateAllMovesForOppositeColor;\n\nclass Board extends React.Component {\n  //Constructor for the Board component\n  constructor(props) {\n    super(props);\n    this.moveArray = [];\n    this.state = {\n      //Initial state of the board\n      squares: [14, 12, 13, 15, 16, 13, 12, 14, 11, 11, 11, 11, 11, 11, 11, 11].concat(Array(32).fill(0).concat([1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 3, 5, 6, 3, 2, 4])),\n      //initial game vars\n      WhiteTurn: true,\n      CordClick: true,\n      clickPiece: null\n    };\n  } //Main Handler for clicks\n\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (this.state.CordClick) {\n      if (squares[i] === 0) return;\n      this.moveArray = CalculateMoves(i, squares[i], squares);\n      this.setState({\n        clickPiece: i\n      });\n    } else {\n      console.log(i);\n\n      for (const l in this.moveArray) {\n        if (i === this.moveArray[l]) {\n          console.log(\"moved\");\n          squares[i] = squares[this.state.clickPiece];\n          squares[this.state.clickPiece] = 0;\n        }\n      }\n    }\n\n    this.setState({\n      squares: squares,\n      WhiteTurn: !this.state.WhiteTurn,\n      CordClick: !this.state.CordClick\n    });\n  }\n\n  renderPiece(i) {\n    //pawn = 1\n    //knight = 2\n    //bishop = 3\n    //rook = 4\n    //queen = 5\n    //king = 6\n    switch (this.state.squares[i]) {\n      case 1:\n        return \"Wp\";\n\n      case 2:\n        return \"Wk\";\n\n      case 3:\n        return \"Wb\";\n\n      case 4:\n        return \"Wr\";\n\n      case 5:\n        return \"Wq\";\n\n      case 6:\n        return \"Wx\";\n\n      case 11:\n        return \"Bp\";\n\n      case 12:\n        return \"Bk\";\n\n      case 13:\n        return \"Bb\";\n\n      case 14:\n        return \"Br\";\n\n      case 15:\n        return \"Bq\";\n\n      case 16:\n        return \"Bx\";\n\n      default:\n        return;\n    }\n  } //Render a light square\n  //displayes the corresponding piece\n\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.renderPiece(i),\n      index: i,\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 4\n    }, this);\n  }\n\n  renderSquared(i) {\n    return /*#__PURE__*/_jsxDEV(Squared, {\n      value: this.renderPiece(i),\n      index: i,\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 4\n    }, this);\n  }\n\n  render() {\n    //Status strings that are displayed above the board\n    let status = 'To Move: ' + (this.state.WhiteTurn ? 'White' : 'Black');\n    let instruction = 'Instruction: ' + (this.state.CordClick ? 'Choose a Piece' : 'Move the Piece'); //renderSquare(i) renders a light square\n    //renderSquared(i) renders a dard square\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instruction\",\n        children: instruction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquared(1), this.renderSquare(2), this.renderSquared(3), this.renderSquare(4), this.renderSquared(5), this.renderSquare(6), this.renderSquared(7)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquared(0 + 8), this.renderSquare(1 + 8), this.renderSquared(2 + 8), this.renderSquare(3 + 8), this.renderSquared(4 + 8), this.renderSquare(5 + 8), this.renderSquared(6 + 8), this.renderSquare(7 + 8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0 + 16), this.renderSquared(1 + 16), this.renderSquare(2 + 16), this.renderSquared(3 + 16), this.renderSquare(4 + 16), this.renderSquared(5 + 16), this.renderSquare(6 + 16), this.renderSquared(7 + 16)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquared(0 + 24), this.renderSquare(1 + 24), this.renderSquared(2 + 24), this.renderSquare(3 + 24), this.renderSquared(4 + 24), this.renderSquare(5 + 24), this.renderSquared(6 + 24), this.renderSquare(7 + 24)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0 + 32), this.renderSquared(1 + 32), this.renderSquare(2 + 32), this.renderSquared(3 + 32), this.renderSquare(4 + 32), this.renderSquared(5 + 32), this.renderSquare(6 + 32), this.renderSquared(7 + 32)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquared(0 + 40), this.renderSquare(1 + 40), this.renderSquared(2 + 40), this.renderSquare(3 + 40), this.renderSquared(4 + 40), this.renderSquare(5 + 40), this.renderSquared(6 + 40), this.renderSquare(7 + 40)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0 + 48), this.renderSquared(1 + 48), this.renderSquare(2 + 48), this.renderSquared(3 + 48), this.renderSquare(4 + 48), this.renderSquared(5 + 48), this.renderSquare(6 + 48), this.renderSquared(7 + 48)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquared(0 + 56), this.renderSquare(1 + 56), this.renderSquared(2 + 56), this.renderSquare(3 + 56), this.renderSquared(4 + 56), this.renderSquare(5 + 56), this.renderSquared(6 + 56), this.renderSquare(7 + 56)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 3\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 526,\n  columnNumber: 2\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Squared\");\n$RefreshReg$(_c3, \"CheckLine\");\n$RefreshReg$(_c4, \"CalculatePawnMoves\");\n$RefreshReg$(_c5, \"CalculateKnightMoves\");\n$RefreshReg$(_c6, \"CalculateBishopMoves\");\n$RefreshReg$(_c7, \"CalculateRookMoves\");\n$RefreshReg$(_c8, \"CalculateQueenMoves\");\n$RefreshReg$(_c9, \"CalculateKingMoves\");\n$RefreshReg$(_c10, \"CalculateMoves\");\n$RefreshReg$(_c11, \"CalculateAllMovesForOppositeColor\");","map":{"version":3,"sources":["/Users/stuartjohnstone/Documents/GitHub/ReactChess/src/index.js"],"names":["React","ReactDOM","img","Image","src","Square","props","onClick","index","value","Squared","isOppositeColor","compareValue","pieceColor","CheckLine","x","y","xChange","yChange","color","squares","cord","concat","checkForCheck","moveArray","i","CalculateMoves","m","console","log","CalculatePawnMoves","direction","push","CalculateKnightMoves","pX","pY","pHigh","pLow","PossibleX","PossibleY","CalculateBishopMoves","CalculateRookMoves","CalculateQueenMoves","CalculateKingMoves","allOpponentMoves","CalculateAllMovesForOppositeColor","combinedX","combinedY","tempI","validMove","tempX","tempY","Board","Component","constructor","state","Array","fill","WhiteTurn","CordClick","clickPiece","handleClick","slice","setState","l","renderPiece","renderSquare","renderSquared","render","status","instruction","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet img = new Image();\nimg.src = 'https://img.favpng.com/11/12/22/chess-piece-pin-knight-clip-art-png-favpng-saLesWdcsg2rCsJeeEeyGJqcQ.jpg';\n\n\n\n//function to display the light square\nfunction Square(props) {\n\treturn (\n\t<button className=\"squarel\" onClick={props.onClick}>\n\t\t{props.index}\n\t\t{props.value}\n\t</button>\n\t);\n}\n//function to display the dark square\nfunction Squared(props) {\n\treturn (\n\t<button className=\"squared\" background =\"#fff\"onClick={props.onClick}>\n\t\t{props.index}\n\t\t{props.value}\n\t</button>\n\t);\n}\n\n\n// checks to see if compareValue is a different color to pieceColor\nfunction isOppositeColor(compareValue,pieceColor){\n\tif(compareValue === 0){\n\t\treturn false;\n\t}\n\tif(compareValue > 10 && pieceColor === true){\n\t\treturn true;\n\t}else if(compareValue < 10 && pieceColor === false){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\n/*\n\tCheckLine(int, int, int, int, bool, int[][])\n\tRecursively collects a list of possible moves in a line directed by xChange and yChange\n\treturns a set of possible moves in a streight line\n*/\nfunction CheckLine(x,y,xChange,yChange,color,squares){\n\tx += xChange;\n\ty += yChange;\n\tvar cord = x + y*8;\n\tif(x >= 0 && x <=7){\n\t\tif(y >= 0 && y <=7){\n\t\t\tif(!isOppositeColor(squares[cord],!color)){\n\t\t\t\treturn [cord].concat(CheckLine(x,y,xChange,yChange,color,squares))\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction checkForCheck(squares){\n\tvar moveArray;\n\tvar color;\n\tfor(var i in squares){\n\t\tif(squares[i] >= 1 && (squares[i] !== 6 && squares[i] !== 16)){\n\t\t\t//calculates the color of i\n\t\t\tif(squares[i] >= 10){\n\t\t\t\tcolor = false;\n\t\t\t}else{\n\t\t\t\tcolor = true;\n\t\t\t}\n\t\t\t//gets the possible moves for i\n\t\t\tmoveArray = CalculateMoves(i,squares[i],squares);\n\t\t\tfor(var m in moveArray){\n\t\t\t\t//checks to see if a king is in the list\n\t\t\t\tif((squares[m] === 6 || squares[m] === 16) && isOppositeColor(squares[m],color)){\n\t\t\t\t\tconsole.log(m, \"check\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction CalculatePawnMoves(x,y,color,i,value,squares){\n\n\tvar moveArray = [];\n\n\tvar direction = -1;\t// assumes the color is white\n\tif(value >= 10){\t// the piece color is black invert it\n\t\tdirection = 1;\n\t}\n\n\t//allows the pawn to take to the left if it can capture\n\tif(x > 0 && isOppositeColor(squares[(x-1 + (y+direction)*8)],color))\n\t{\n\t\tmoveArray.push(x-1 + (y+direction)*8);\n\t}\n\n\t//allows the pawn to take to the right if there is a capture\n\tif(x < 7 && isOppositeColor(squares[(x+1 + (y+direction)*8)],color))\n\t{\n\t\tmoveArray.push(x+1 + (y+direction)*8);\n\t}\n\n\t//allows the pawn to move one square forward\n\tif(squares[(x + (y+direction)*8)] === 0)\n\t{\n\t\tmoveArray.push((x + (y+direction)*8));\n\n\t\t//if the pawn can move forward once check to see if it can move twice\n\t\t//if the white pawn hasn't moved yet it can move two squares\n\t\tif((value === 1 && y === 6) && squares[x + ((y-1)+direction)*8] === 0){\n\t\t\tmoveArray.push(x + ((y-1)+direction)*8);\n\t\t//if the blackwhite pawn hasn't moved yet it can move two squares\n\t\t}else if((value === 11 && y === 1) && squares[x + ((y+1)+direction)*8] === 0){\n\t\t\tmoveArray.push(x + ((y+1)+direction)*8);\n\t\t}\n\t}\n\n\treturn moveArray;\n}\nfunction CalculateKnightMoves(x,y,color,squares){\n\tvar pX;\n\tvar pY;\n\n\tvar moveArray = [];\n\n\t//temp variables\n\tvar pHigh;\n\tvar pLow;\n\t//possible combinations that will allow the special knight movement\n\tvar PossibleX = [-2,-1,1,2];\n\tvar PossibleY = [1,2,2,1];\n\n\tfor(var index in PossibleX){\n\t\tpX = PossibleX[index];\n\t\tpY = PossibleY[index];\n\t\tpHigh = x+pX + (y+pY)*8;\n\t\tpLow = x+pX + (y-pY)*8;\n\n\t\t//checks to see if the x cordinate is in bounds\n\t\tif(x+pX <= 7 && x + pX >= 0){\n\n\t\t\t//checks to see if the knight could move to a square above\n\t\t\tif(y + pY <= 7 && !isOppositeColor(squares[pHigh],!color)){\n\t\t\t\tmoveArray.push(pHigh);\n\t\t\t}\n\t\t\t//checks to see if the knight could move to a square below\n\t\t\tif(y - pY >= 0 && !isOppositeColor(squares[pLow],!color)){\n\t\t\t\tmoveArray.push(pLow);\n\t\t\t}\n\t\t}\n\t}\n\treturn moveArray;\n}\nfunction CalculateBishopMoves(x,y,color,squares){\n\tvar moveArray = [];\n\n\tmoveArray = moveArray.concat(CheckLine(x,y,1,1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,1,-1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,-1,1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,-1,-1,color,squares));\n\n\treturn moveArray;\n}\nfunction CalculateRookMoves(x,y,color,squares){\n\tvar moveArray = [];\n\n\t// vertical/horizontal movement\n\tmoveArray = moveArray.concat(CheckLine(x,y,1,0,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,-1,0,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,0,1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,0,-1,color,squares));\n\n\treturn moveArray;\n}\nfunction CalculateQueenMoves(x,y,color,squares){\n\tvar moveArray = [];\n\n\t// diagonal movement\n\tmoveArray = moveArray.concat(CheckLine(x,y,1,1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,1,-1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,-1,1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,-1,-1,color,squares));\n\t// vertical/horizontal movement\n\tmoveArray = moveArray.concat(CheckLine(x,y,1,0,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,-1,0,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,0,1,color,squares));\n\tmoveArray = moveArray.concat(CheckLine(x,y,0,-1,color,squares));\n\n\treturn moveArray;\n}\nfunction CalculateKingMoves(x,y,color,i,value,squares){\n\tvar pX;\n\tvar pY;\n\n\tvar moveArray = [];\n\n\tvar allOpponentMoves = CalculateAllMovesForOppositeColor(squares,color)\n\n\tvar combinedX;\n\tvar combinedY;\n\tvar tempI;\n\n\tvar validMove;\n\n\tfor(var tempX in [-1,0,1]){\n\t\tfor(var tempY in [-1,0,1]){\n\n\t\t\tpX = [-1,0,1][tempX];\n\t\t\tpY = [-1,0,1][tempY];\n\t\t\ttempI = combinedX + ((combinedY)*8);\n\t\t\t//checks to see if the potential posistion is within the bounds of the board\n\t\t\tif( (combinedX <= 7 && combinedX >= 0) && (combinedY <= 7 && combinedY >= 0) ){\n\t\t\t\t//checks to see if the potential position is not where the king is already \n\t\t\t\tif(pX !==0 || pY !==0){\n\n\t\t\t\t\tvalidMove = true;\n\t\t\t\t\tfor(var m in allOpponentMoves){\n\t\t\t\t\t\tif(allOpponentMoves[m] === tempI){\n\t\t\t\t\t\t\tvalidMove = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(validMove === true){\n\t\t\t\t\t\tmoveArray.push(tempI);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\treturn moveArray;\n}\n\n/*\n\tCalculateMoves(int, int, int[][])\n\ti is the location on the squares grid\n\tvalue is the value of i\n\tsquares is the board \n*/\n\nfunction CalculateMoves(i,value,squares){\n\n\t//calculate board position of the piece\n\tvar x = i%8;\n\tvar y = (i-x)/8;\n\n\tvar moveArray = [];\n\n\t//white = true && white < 10\n\t//black = false && black > 10\n\n\tvar color = true; \t// initially assumes that the piece is white\n\tif(value >= 10){\t// the piece color is white\n\t\tcolor = false;\n\t}\n\n\t//pawn = 1\n\t//knight = 2\n\t//bishop = 3\n\t//rook = 4\n\t//queen = 5\n\t//king = 6\n\tif(value === 1 || value === 11){ // pawn\n\t\tmoveArray = CalculatePawnMoves(x,y,color,i,value,squares);\n\t}\n\telse if(value === 2 || value === 12){ // knight\n\t\tmoveArray = CalculateKnightMoves(x,y,color,i,value,squares);\n\t}\n\telse if(value === 3 || value === 13){ // bishop\n\t\tmoveArray = CalculateBishopMoves(x,y,color,squares);\n\t}\n\telse if(value === 4 || value === 14){ // rook\n\t\tmoveArray = CalculateRookMoves(x,y,color,squares);\n\t}\n\telse if(value === 5 || value === 15){ // queen\n\t\tmoveArray = CalculateQueenMoves(x,y,color,squares);\n\t}\n\telse if(value === 6 || value === 16){\n\t\tmoveArray = CalculateKingMoves(x,y,color,i,value,squares);\n\t}\n\tconsole.log(moveArray);\n\treturn moveArray;\n\n} \n\nfunction CalculateAllMovesForOppositeColor(squares,color){\n\tvar moveArray = [];\n\tfor(var i in squares){\n\t\tif(color){\n\t\t\tif(squares[i] >= 10){\n\t\t\t\tmoveArray.concat(CalculateMoves(i,squares[i],squares))\n\t\t\t}\n\t\t}else{\n\t\t\tif(squares[i] < 10 && squares[i] !== 0){\n\t\t\t\tmoveArray.concat(CalculateMoves(i,squares[i],squares))\n\t\t\t}\n\t\t}\n\t}\n\treturn moveArray;\n}\n\n//The main board class\nclass Board extends React.Component {\n\t//Constructor for the Board component\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.moveArray = [];\n\t\tthis.state = {\n\t\t\t//Initial state of the board\n\t\t\tsquares: [14,12,13,15,16,13,12,14,11,11,11,11,11,11,11,11].concat(Array(32).fill(0).concat([1,1,1,1,1,1,1,1,4,2,3,5,6,3,2,4])),\n\t\t\t//initial game vars\n\t\t\tWhiteTurn: true,\n\t\t\tCordClick: true,\n\t\t\tclickPiece: null\n\t\t};\n\t}\n\n\t//Main Handler for clicks\n\thandleClick(i) {\n\t\tconst squares = this.state.squares.slice();\n\t\tif(this.state.CordClick){\n\t\t\tif (squares[i] === 0) return;\n\t\t\tthis.moveArray = CalculateMoves(i,squares[i],squares);\n\t\t\tthis.setState({clickPiece: i});\n\t\t}else{\n\t\t\tconsole.log(i);\n\t\t\tfor(const l in this.moveArray){\n\t\t\t\tif(i === this.moveArray[l]){\n\t\t\t\t\tconsole.log(\"moved\");\n\t\t\t\t\tsquares[i] = squares[this.state.clickPiece];\n\t\t\t\t\tsquares[this.state.clickPiece] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tsquares: squares,\n\t\t\tWhiteTurn: !this.state.WhiteTurn,\n\t\t\tCordClick: !this.state.CordClick,\n\n\t\t});\n\t}\n\n\trenderPiece(i){\n\t\t//pawn = 1\n\t\t//knight = 2\n\t\t//bishop = 3\n\t\t//rook = 4\n\t\t//queen = 5\n\t\t//king = 6\n\n\t\tswitch(this.state.squares[i]){\n\t\t\tcase(1):\n\t\t\t\treturn \"Wp\";\n\t\t\tcase(2):\n\t\t\t\treturn \"Wk\";\n\t\t\tcase(3):\n\t\t\t\treturn \"Wb\";\n\t\t\tcase(4):\n\t\t\t\treturn \"Wr\";\n\t\t\tcase(5):\n\t\t\t\treturn \"Wq\";\n\t\t\tcase(6):\n\t\t\t\treturn \"Wx\";\n\t\t\tcase(11):\n\t\t\t\treturn \"Bp\";\n\t\t\tcase(12):\n\t\t\t\treturn \"Bk\";\n\t\t\tcase(13):\n\t\t\t\treturn \"Bb\";\n\t\t\tcase(14):\n\t\t\t\treturn \"Br\";\n\t\t\tcase(15):\n\t\t\t\treturn \"Bq\";\n\t\t\tcase(16):\n\t\t\t\treturn \"Bx\";\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\t//Render a light square\n\t//displayes the corresponding piece\n\trenderSquare(i) {\n\t\treturn (\n\t\t\t<Square\n\t\t\tvalue={this.renderPiece(i)}\n\t\t\tindex={i} \n\t\t\tonClick={() => this.handleClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\trenderSquared(i){\n\t\treturn (\n\t\t\t<Squared\n\t\t\tvalue={this.renderPiece(i)}\n\t\t\tindex={i} \n\t\t\tonClick={() => this.handleClick(i)}\n\t\t\t/>\n\t\t);\n\n\t}\n\n\n\n\trender() {\n\t\t//Status strings that are displayed above the board\n\t\tlet status = 'To Move: ' + (this.state.WhiteTurn ? 'White' : 'Black');\n\t\tlet instruction = 'Instruction: ' + (this.state.CordClick ? 'Choose a Piece' : 'Move the Piece');\n\t\t//renderSquare(i) renders a light square\n\t\t//renderSquared(i) renders a dard square\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"status\">{status}</div>\n\t\t\t\t<div className=\"instruction\">{instruction}</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquared(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t\t{this.renderSquared(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquared(5)}\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquared(7)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquared(0+8)}\n\t\t\t\t\t{this.renderSquare(1+8)}\n\t\t\t\t\t{this.renderSquared(2+8)}\n\t\t\t\t\t{this.renderSquare(3+8)}\n\t\t\t\t\t{this.renderSquared(4+8)}\n\t\t\t\t\t{this.renderSquare(5+8)}\n\t\t\t\t\t{this.renderSquared(6+8)}\n\t\t\t\t\t{this.renderSquare(7+8)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0+16)}\n\t\t\t\t\t{this.renderSquared(1+16)}\n\t\t\t\t\t{this.renderSquare(2+16)}\n\t\t\t\t\t{this.renderSquared(3+16)}\n\t\t\t\t\t{this.renderSquare(4+16)}\n\t\t\t\t\t{this.renderSquared(5+16)}\n\t\t\t\t\t{this.renderSquare(6+16)}\n\t\t\t\t\t{this.renderSquared(7+16)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquared(0+24)}\n\t\t\t\t\t{this.renderSquare(1+24)}\n\t\t\t\t\t{this.renderSquared(2+24)}\n\t\t\t\t\t{this.renderSquare(3+24)}\n\t\t\t\t\t{this.renderSquared(4+24)}\n\t\t\t\t\t{this.renderSquare(5+24)}\n\t\t\t\t\t{this.renderSquared(6+24)}\n\t\t\t\t\t{this.renderSquare(7+24)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0+32)}\n\t\t\t\t\t{this.renderSquared(1+32)}\n\t\t\t\t\t{this.renderSquare(2+32)}\n\t\t\t\t\t{this.renderSquared(3+32)}\n\t\t\t\t\t{this.renderSquare(4+32)}\n\t\t\t\t\t{this.renderSquared(5+32)}\n\t\t\t\t\t{this.renderSquare(6+32)}\n\t\t\t\t\t{this.renderSquared(7+32)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquared(0+40)}\n\t\t\t\t\t{this.renderSquare(1+40)}\n\t\t\t\t\t{this.renderSquared(2+40)}\n\t\t\t\t\t{this.renderSquare(3+40)}\n\t\t\t\t\t{this.renderSquared(4+40)}\n\t\t\t\t\t{this.renderSquare(5+40)}\n\t\t\t\t\t{this.renderSquared(6+40)}\n\t\t\t\t\t{this.renderSquare(7+40)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0+48)}\n\t\t\t\t\t{this.renderSquared(1+48)}\n\t\t\t\t\t{this.renderSquare(2+48)}\n\t\t\t\t\t{this.renderSquared(3+48)}\n\t\t\t\t\t{this.renderSquare(4+48)}\n\t\t\t\t\t{this.renderSquared(5+48)}\n\t\t\t\t\t{this.renderSquare(6+48)}\n\t\t\t\t\t{this.renderSquared(7+48)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquared(0+56)}\n\t\t\t\t\t{this.renderSquare(1+56)}\n\t\t\t\t\t{this.renderSquared(2+56)}\n\t\t\t\t\t{this.renderSquare(3+56)}\n\t\t\t\t\t{this.renderSquared(4+56)}\n\t\t\t\t\t{this.renderSquare(5+56)}\n\t\t\t\t\t{this.renderSquared(6+56)}\n\t\t\t\t\t{this.renderSquare(7+56)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\trender() {\n\treturn (\n\t\t<div className=\"game\">\n\t\t<div className=\"game-board\">\n\t\t\t<Board />\n\t\t</div>\n\t\t<div className=\"game-info\">\n\t\t\t<div>{/* status */}</div>\n\t\t\t<ol>{/* TODO */}</ol>\n\t\t</div>\n\t\t</div>\n\t);\n\t}\n}\n\n// ========================================\n\nReactDOM.render(\n\t<Game />,\n\tdocument.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}